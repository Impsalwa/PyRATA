
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftLBRACKETRBRACKETleftORleftANDleftLPARENRPARENrightNOTleftEQNAME VALUE EQ MATCH IN AND OR LBRACKET RBRACKET LPAREN RPAREN NOT OPTION ATLEASTONE ANYexpression : quantifiedstep expression\n                  | quantifiedstep quantifiedstep : step \n            | OPTION step\n            | ATLEASTONE step \n            | ANY stepstep : atomicconstraint\n            | NOT step\n            | LBRACKET classconstraint RBRACKET classconstraint : classconstraint AND partofclassconstraint\n            | classconstraint OR partofclassconstraint \n            | partofclassconstraint partofclassconstraint : atomicconstraint\n                    | LPAREN classconstraint RPAREN  \n                    | NOT classconstraint atomicconstraint : NAME EQ VALUE \n                          | NAME MATCH VALUE\n                          | NAME IN VALUE'
    
_lr_action_items = {'RBRACKET':([13,16,17,25,29,30,31,32,33,34,],[-12,-13,26,-15,-16,-18,-17,-14,-11,-10,]),'LBRACKET':([0,2,3,4,6,7,8,10,11,12,18,19,26,29,30,31,],[5,5,5,-3,5,5,-7,5,-5,-6,-8,-4,-9,-16,-18,-17,]),'ATLEASTONE':([0,4,8,10,11,12,18,19,26,29,30,31,],[2,-3,-7,2,-5,-6,-8,-4,-9,-16,-18,-17,]),'IN':([9,],[21,]),'LPAREN':([5,14,15,27,28,],[14,14,14,14,14,]),'$end':([1,4,8,10,11,12,18,19,23,26,29,30,31,],[0,-3,-7,-2,-5,-6,-8,-4,-1,-9,-16,-18,-17,]),'ANY':([0,4,8,10,11,12,18,19,26,29,30,31,],[3,-3,-7,3,-5,-6,-8,-4,-9,-16,-18,-17,]),'AND':([13,16,17,24,25,29,30,31,32,33,34,],[-12,-13,28,28,-15,-16,-18,-17,-14,-11,-10,]),'NOT':([0,2,3,4,5,6,7,8,10,11,12,14,15,18,19,26,27,28,29,30,31,],[6,6,6,-3,15,6,6,-7,6,-5,-6,15,15,-8,-4,-9,15,15,-16,-18,-17,]),'OPTION':([0,4,8,10,11,12,18,19,26,29,30,31,],[7,-3,-7,7,-5,-6,-8,-4,-9,-16,-18,-17,]),'OR':([13,16,17,24,25,29,30,31,32,33,34,],[-12,-13,27,27,-15,-16,-18,-17,-14,-11,-10,]),'MATCH':([9,],[22,]),'NAME':([0,2,3,4,5,6,7,8,10,11,12,14,15,18,19,26,27,28,29,30,31,],[9,9,9,-3,9,9,9,-7,9,-5,-6,9,9,-8,-4,-9,9,9,-16,-18,-17,]),'RPAREN':([13,16,24,25,29,30,31,32,33,34,],[-12,-13,32,-15,-16,-18,-17,-14,-11,-10,]),'EQ':([9,],[20,]),'VALUE':([20,21,22,],[29,30,31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,10,],[1,23,]),'partofclassconstraint':([5,14,15,27,28,],[13,13,13,33,34,]),'atomicconstraint':([0,2,3,5,6,7,10,14,15,27,28,],[8,8,8,16,8,8,8,16,16,16,16,]),'classconstraint':([5,14,15,],[17,24,25,]),'step':([0,2,3,6,7,10,],[4,11,12,18,19,4,]),'quantifiedstep':([0,10,],[10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> quantifiedstep expression','expression',2,'p_expression','pyrata_parser.py',43),
  ('expression -> quantifiedstep','expression',1,'p_expression','pyrata_parser.py',44),
  ('quantifiedstep -> step','quantifiedstep',1,'p_quantifiedstep','pyrata_parser.py',124),
  ('quantifiedstep -> OPTION step','quantifiedstep',2,'p_quantifiedstep','pyrata_parser.py',125),
  ('quantifiedstep -> ATLEASTONE step','quantifiedstep',2,'p_quantifiedstep','pyrata_parser.py',126),
  ('quantifiedstep -> ANY step','quantifiedstep',2,'p_quantifiedstep','pyrata_parser.py',127),
  ('step -> atomicconstraint','step',1,'p_step','pyrata_parser.py',370),
  ('step -> NOT step','step',2,'p_step','pyrata_parser.py',371),
  ('step -> LBRACKET classconstraint RBRACKET','step',3,'p_step','pyrata_parser.py',372),
  ('classconstraint -> classconstraint AND partofclassconstraint','classconstraint',3,'p_classconstraint','pyrata_parser.py',416),
  ('classconstraint -> classconstraint OR partofclassconstraint','classconstraint',3,'p_classconstraint','pyrata_parser.py',417),
  ('classconstraint -> partofclassconstraint','classconstraint',1,'p_classconstraint','pyrata_parser.py',418),
  ('partofclassconstraint -> atomicconstraint','partofclassconstraint',1,'p_partofclassconstraint','pyrata_parser.py',448),
  ('partofclassconstraint -> LPAREN classconstraint RPAREN','partofclassconstraint',3,'p_partofclassconstraint','pyrata_parser.py',449),
  ('partofclassconstraint -> NOT classconstraint','partofclassconstraint',2,'p_partofclassconstraint','pyrata_parser.py',450),
  ('atomicconstraint -> NAME EQ VALUE','atomicconstraint',3,'p_atomicconstraint','pyrata_parser.py',470),
  ('atomicconstraint -> NAME MATCH VALUE','atomicconstraint',3,'p_atomicconstraint','pyrata_parser.py',471),
  ('atomicconstraint -> NAME IN VALUE','atomicconstraint',3,'p_atomicconstraint','pyrata_parser.py',472),
]
