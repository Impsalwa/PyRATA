Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> quantifiedstep
Rule 1     expression -> quantifiedstep expression
Rule 2     expression -> quantifiedstep
Rule 3     quantifiedstep -> step
Rule 4     quantifiedstep -> OPTION step
Rule 5     quantifiedstep -> ATLEASTONE step
Rule 6     quantifiedstep -> ANY step
Rule 7     step -> atomicconstraint
Rule 8     step -> NOT step
Rule 9     step -> LBRACKET classconstraint RBRACKET
Rule 10    classconstraint -> classconstraint AND partofclassconstraint
Rule 11    classconstraint -> classconstraint OR partofclassconstraint
Rule 12    classconstraint -> partofclassconstraint
Rule 13    partofclassconstraint -> atomicconstraint
Rule 14    partofclassconstraint -> LPAREN classconstraint RPAREN
Rule 15    partofclassconstraint -> NOT classconstraint
Rule 16    atomicconstraint -> NAME EQ VALUE

Terminals, with rules where they appear

AND                  : 10
ANY                  : 6
ATLEASTONE           : 5
EQ                   : 16
LBRACKET             : 9
LPAREN               : 14
NAME                 : 16
NOT                  : 8 15
OPTION               : 4
OR                   : 11
RBRACKET             : 9
RPAREN               : 14
VALUE                : 16
error                : 

Nonterminals, with rules where they appear

atomicconstraint     : 7 13
classconstraint      : 9 10 11 14 15
expression           : 1
partofclassconstraint : 10 11 12
quantifiedstep       : 1 2 0
step                 : 3 4 5 6 8

Parsing method: LALR

state 0

    (0) S' -> . quantifiedstep
    (3) quantifiedstep -> . step
    (4) quantifiedstep -> . OPTION step
    (5) quantifiedstep -> . ATLEASTONE step
    (6) quantifiedstep -> . ANY step
    (7) step -> . atomicconstraint
    (8) step -> . NOT step
    (9) step -> . LBRACKET classconstraint RBRACKET
    (16) atomicconstraint -> . NAME EQ VALUE

    OPTION          shift and go to state 6
    ATLEASTONE      shift and go to state 9
    ANY             shift and go to state 1
    NOT             shift and go to state 3
    LBRACKET        shift and go to state 8
    NAME            shift and go to state 7

    step                           shift and go to state 5
    atomicconstraint               shift and go to state 4
    quantifiedstep                 shift and go to state 2

state 1

    (6) quantifiedstep -> ANY . step
    (7) step -> . atomicconstraint
    (8) step -> . NOT step
    (9) step -> . LBRACKET classconstraint RBRACKET
    (16) atomicconstraint -> . NAME EQ VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 8
    NAME            shift and go to state 7

    step                           shift and go to state 10
    atomicconstraint               shift and go to state 4

state 2

    (0) S' -> quantifiedstep .



state 3

    (8) step -> NOT . step
    (7) step -> . atomicconstraint
    (8) step -> . NOT step
    (9) step -> . LBRACKET classconstraint RBRACKET
    (16) atomicconstraint -> . NAME EQ VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 8
    NAME            shift and go to state 7

    step                           shift and go to state 11
    atomicconstraint               shift and go to state 4

state 4

    (7) step -> atomicconstraint .

    $end            reduce using rule 7 (step -> atomicconstraint .)


state 5

    (3) quantifiedstep -> step .

    $end            reduce using rule 3 (quantifiedstep -> step .)


state 6

    (4) quantifiedstep -> OPTION . step
    (7) step -> . atomicconstraint
    (8) step -> . NOT step
    (9) step -> . LBRACKET classconstraint RBRACKET
    (16) atomicconstraint -> . NAME EQ VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 8
    NAME            shift and go to state 7

    step                           shift and go to state 12
    atomicconstraint               shift and go to state 4

state 7

    (16) atomicconstraint -> NAME . EQ VALUE

    EQ              shift and go to state 13


state 8

    (9) step -> LBRACKET . classconstraint RBRACKET
    (10) classconstraint -> . classconstraint AND partofclassconstraint
    (11) classconstraint -> . classconstraint OR partofclassconstraint
    (12) classconstraint -> . partofclassconstraint
    (13) partofclassconstraint -> . atomicconstraint
    (14) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (15) partofclassconstraint -> . NOT classconstraint
    (16) atomicconstraint -> . NAME EQ VALUE

    LPAREN          shift and go to state 15
    NOT             shift and go to state 16
    NAME            shift and go to state 7

    partofclassconstraint          shift and go to state 14
    classconstraint                shift and go to state 18
    atomicconstraint               shift and go to state 17

state 9

    (5) quantifiedstep -> ATLEASTONE . step
    (7) step -> . atomicconstraint
    (8) step -> . NOT step
    (9) step -> . LBRACKET classconstraint RBRACKET
    (16) atomicconstraint -> . NAME EQ VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 8
    NAME            shift and go to state 7

    step                           shift and go to state 19
    atomicconstraint               shift and go to state 4

state 10

    (6) quantifiedstep -> ANY step .

    $end            reduce using rule 6 (quantifiedstep -> ANY step .)


state 11

    (8) step -> NOT step .

    $end            reduce using rule 8 (step -> NOT step .)


state 12

    (4) quantifiedstep -> OPTION step .

    $end            reduce using rule 4 (quantifiedstep -> OPTION step .)


state 13

    (16) atomicconstraint -> NAME EQ . VALUE

    VALUE           shift and go to state 20


state 14

    (12) classconstraint -> partofclassconstraint .

    RBRACKET        reduce using rule 12 (classconstraint -> partofclassconstraint .)
    AND             reduce using rule 12 (classconstraint -> partofclassconstraint .)
    OR              reduce using rule 12 (classconstraint -> partofclassconstraint .)
    RPAREN          reduce using rule 12 (classconstraint -> partofclassconstraint .)


state 15

    (14) partofclassconstraint -> LPAREN . classconstraint RPAREN
    (10) classconstraint -> . classconstraint AND partofclassconstraint
    (11) classconstraint -> . classconstraint OR partofclassconstraint
    (12) classconstraint -> . partofclassconstraint
    (13) partofclassconstraint -> . atomicconstraint
    (14) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (15) partofclassconstraint -> . NOT classconstraint
    (16) atomicconstraint -> . NAME EQ VALUE

    LPAREN          shift and go to state 15
    NOT             shift and go to state 16
    NAME            shift and go to state 7

    partofclassconstraint          shift and go to state 14
    classconstraint                shift and go to state 21
    atomicconstraint               shift and go to state 17

state 16

    (15) partofclassconstraint -> NOT . classconstraint
    (10) classconstraint -> . classconstraint AND partofclassconstraint
    (11) classconstraint -> . classconstraint OR partofclassconstraint
    (12) classconstraint -> . partofclassconstraint
    (13) partofclassconstraint -> . atomicconstraint
    (14) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (15) partofclassconstraint -> . NOT classconstraint
    (16) atomicconstraint -> . NAME EQ VALUE

    LPAREN          shift and go to state 15
    NOT             shift and go to state 16
    NAME            shift and go to state 7

    partofclassconstraint          shift and go to state 14
    classconstraint                shift and go to state 22
    atomicconstraint               shift and go to state 17

state 17

    (13) partofclassconstraint -> atomicconstraint .

    RPAREN          reduce using rule 13 (partofclassconstraint -> atomicconstraint .)
    AND             reduce using rule 13 (partofclassconstraint -> atomicconstraint .)
    OR              reduce using rule 13 (partofclassconstraint -> atomicconstraint .)
    RBRACKET        reduce using rule 13 (partofclassconstraint -> atomicconstraint .)


state 18

    (9) step -> LBRACKET classconstraint . RBRACKET
    (10) classconstraint -> classconstraint . AND partofclassconstraint
    (11) classconstraint -> classconstraint . OR partofclassconstraint

    RBRACKET        shift and go to state 23
    AND             shift and go to state 25
    OR              shift and go to state 24


state 19

    (5) quantifiedstep -> ATLEASTONE step .

    $end            reduce using rule 5 (quantifiedstep -> ATLEASTONE step .)


state 20

    (16) atomicconstraint -> NAME EQ VALUE .

    $end            reduce using rule 16 (atomicconstraint -> NAME EQ VALUE .)
    AND             reduce using rule 16 (atomicconstraint -> NAME EQ VALUE .)
    OR              reduce using rule 16 (atomicconstraint -> NAME EQ VALUE .)
    RBRACKET        reduce using rule 16 (atomicconstraint -> NAME EQ VALUE .)
    RPAREN          reduce using rule 16 (atomicconstraint -> NAME EQ VALUE .)


state 21

    (14) partofclassconstraint -> LPAREN classconstraint . RPAREN
    (10) classconstraint -> classconstraint . AND partofclassconstraint
    (11) classconstraint -> classconstraint . OR partofclassconstraint

    RPAREN          shift and go to state 26
    AND             shift and go to state 25
    OR              shift and go to state 24


state 22

    (15) partofclassconstraint -> NOT classconstraint .
    (10) classconstraint -> classconstraint . AND partofclassconstraint
    (11) classconstraint -> classconstraint . OR partofclassconstraint

    RPAREN          reduce using rule 15 (partofclassconstraint -> NOT classconstraint .)
    AND             reduce using rule 15 (partofclassconstraint -> NOT classconstraint .)
    OR              reduce using rule 15 (partofclassconstraint -> NOT classconstraint .)
    RBRACKET        reduce using rule 15 (partofclassconstraint -> NOT classconstraint .)

  ! AND             [ shift and go to state 25 ]
  ! OR              [ shift and go to state 24 ]


state 23

    (9) step -> LBRACKET classconstraint RBRACKET .

    $end            reduce using rule 9 (step -> LBRACKET classconstraint RBRACKET .)


state 24

    (11) classconstraint -> classconstraint OR . partofclassconstraint
    (13) partofclassconstraint -> . atomicconstraint
    (14) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (15) partofclassconstraint -> . NOT classconstraint
    (16) atomicconstraint -> . NAME EQ VALUE

    LPAREN          shift and go to state 15
    NOT             shift and go to state 16
    NAME            shift and go to state 7

    partofclassconstraint          shift and go to state 27
    atomicconstraint               shift and go to state 17

state 25

    (10) classconstraint -> classconstraint AND . partofclassconstraint
    (13) partofclassconstraint -> . atomicconstraint
    (14) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (15) partofclassconstraint -> . NOT classconstraint
    (16) atomicconstraint -> . NAME EQ VALUE

    LPAREN          shift and go to state 15
    NOT             shift and go to state 16
    NAME            shift and go to state 7

    partofclassconstraint          shift and go to state 28
    atomicconstraint               shift and go to state 17

state 26

    (14) partofclassconstraint -> LPAREN classconstraint RPAREN .

    RPAREN          reduce using rule 14 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    AND             reduce using rule 14 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    OR              reduce using rule 14 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    RBRACKET        reduce using rule 14 (partofclassconstraint -> LPAREN classconstraint RPAREN .)


state 27

    (11) classconstraint -> classconstraint OR partofclassconstraint .

    RBRACKET        reduce using rule 11 (classconstraint -> classconstraint OR partofclassconstraint .)
    AND             reduce using rule 11 (classconstraint -> classconstraint OR partofclassconstraint .)
    OR              reduce using rule 11 (classconstraint -> classconstraint OR partofclassconstraint .)
    RPAREN          reduce using rule 11 (classconstraint -> classconstraint OR partofclassconstraint .)


state 28

    (10) classconstraint -> classconstraint AND partofclassconstraint .

    RBRACKET        reduce using rule 10 (classconstraint -> classconstraint AND partofclassconstraint .)
    AND             reduce using rule 10 (classconstraint -> classconstraint AND partofclassconstraint .)
    OR              reduce using rule 10 (classconstraint -> classconstraint AND partofclassconstraint .)
    RPAREN          reduce using rule 10 (classconstraint -> classconstraint AND partofclassconstraint .)

