Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     statement -> expression
Rule 2     expression -> quantifiedstep expression
Rule 3     expression -> quantifiedstep
Rule 4     quantifiedstep -> step
Rule 5     quantifiedstep -> OPTION step
Rule 6     quantifiedstep -> ATLEASTONE step
Rule 7     quantifiedstep -> ANY step
Rule 8     step -> atomicconstraint
Rule 9     step -> NOT step
Rule 10    step -> LBRACKET classconstraint RBRACKET
Rule 11    classconstraint -> partofclassconstraint
Rule 12    classconstraint -> partofclassconstraint AND classconstraint
Rule 13    classconstraint -> partofclassconstraint OR classconstraint
Rule 14    partofclassconstraint -> atomicconstraint
Rule 15    partofclassconstraint -> LPAREN classconstraint RPAREN
Rule 16    partofclassconstraint -> NOT classconstraint
Rule 17    atomicconstraint -> NAME IS VALUE

Terminals, with rules where they appear

AND                  : 12
ANY                  : 7
ATLEASTONE           : 6
IS                   : 17
LBRACKET             : 10
LPAREN               : 15
NAME                 : 17
NOT                  : 9 16
OPTION               : 5
OR                   : 13
RBRACKET             : 10
RPAREN               : 15
VALUE                : 17
error                : 

Nonterminals, with rules where they appear

atomicconstraint     : 8 14
classconstraint      : 10 12 13 15 16
expression           : 1 2 0
partofclassconstraint : 11 12 13
quantifiedstep       : 2 3
statement            : 
step                 : 4 5 6 7 9

Parsing method: LALR

state 0

    (0) S' -> . expression
    (2) expression -> . quantifiedstep expression
    (3) expression -> . quantifiedstep
    (4) quantifiedstep -> . step
    (5) quantifiedstep -> . OPTION step
    (6) quantifiedstep -> . ATLEASTONE step
    (7) quantifiedstep -> . ANY step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    OPTION          shift and go to state 8
    ATLEASTONE      shift and go to state 4
    ANY             shift and go to state 2
    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    quantifiedstep                 shift and go to state 7
    expression                     shift and go to state 6
    step                           shift and go to state 1

state 1

    (4) quantifiedstep -> step .

    OPTION          reduce using rule 4 (quantifiedstep -> step .)
    ATLEASTONE      reduce using rule 4 (quantifiedstep -> step .)
    ANY             reduce using rule 4 (quantifiedstep -> step .)
    NOT             reduce using rule 4 (quantifiedstep -> step .)
    LBRACKET        reduce using rule 4 (quantifiedstep -> step .)
    NAME            reduce using rule 4 (quantifiedstep -> step .)
    $end            reduce using rule 4 (quantifiedstep -> step .)


state 2

    (7) quantifiedstep -> ANY . step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    step                           shift and go to state 11

state 3

    (9) step -> NOT . step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    step                           shift and go to state 12

state 4

    (6) quantifiedstep -> ATLEASTONE . step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    step                           shift and go to state 13

state 5

    (8) step -> atomicconstraint .

    OPTION          reduce using rule 8 (step -> atomicconstraint .)
    ATLEASTONE      reduce using rule 8 (step -> atomicconstraint .)
    ANY             reduce using rule 8 (step -> atomicconstraint .)
    NOT             reduce using rule 8 (step -> atomicconstraint .)
    LBRACKET        reduce using rule 8 (step -> atomicconstraint .)
    NAME            reduce using rule 8 (step -> atomicconstraint .)
    $end            reduce using rule 8 (step -> atomicconstraint .)


state 6

    (0) S' -> expression .



state 7

    (2) expression -> quantifiedstep . expression
    (3) expression -> quantifiedstep .
    (2) expression -> . quantifiedstep expression
    (3) expression -> . quantifiedstep
    (4) quantifiedstep -> . step
    (5) quantifiedstep -> . OPTION step
    (6) quantifiedstep -> . ATLEASTONE step
    (7) quantifiedstep -> . ANY step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    $end            reduce using rule 3 (expression -> quantifiedstep .)
    OPTION          shift and go to state 8
    ATLEASTONE      shift and go to state 4
    ANY             shift and go to state 2
    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    quantifiedstep                 shift and go to state 7
    expression                     shift and go to state 14
    step                           shift and go to state 1

state 8

    (5) quantifiedstep -> OPTION . step
    (8) step -> . atomicconstraint
    (9) step -> . NOT step
    (10) step -> . LBRACKET classconstraint RBRACKET
    (17) atomicconstraint -> . NAME IS VALUE

    NOT             shift and go to state 3
    LBRACKET        shift and go to state 10
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 5
    step                           shift and go to state 15

state 9

    (17) atomicconstraint -> NAME . IS VALUE

    IS              shift and go to state 16


state 10

    (10) step -> LBRACKET . classconstraint RBRACKET
    (11) classconstraint -> . partofclassconstraint
    (12) classconstraint -> . partofclassconstraint AND classconstraint
    (13) classconstraint -> . partofclassconstraint OR classconstraint
    (14) partofclassconstraint -> . atomicconstraint
    (15) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (16) partofclassconstraint -> . NOT classconstraint
    (17) atomicconstraint -> . NAME IS VALUE

    LPAREN          shift and go to state 21
    NOT             shift and go to state 18
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 20
    classconstraint                shift and go to state 17
    partofclassconstraint          shift and go to state 19

state 11

    (7) quantifiedstep -> ANY step .

    OPTION          reduce using rule 7 (quantifiedstep -> ANY step .)
    ATLEASTONE      reduce using rule 7 (quantifiedstep -> ANY step .)
    ANY             reduce using rule 7 (quantifiedstep -> ANY step .)
    NOT             reduce using rule 7 (quantifiedstep -> ANY step .)
    LBRACKET        reduce using rule 7 (quantifiedstep -> ANY step .)
    NAME            reduce using rule 7 (quantifiedstep -> ANY step .)
    $end            reduce using rule 7 (quantifiedstep -> ANY step .)


state 12

    (9) step -> NOT step .

    OPTION          reduce using rule 9 (step -> NOT step .)
    ATLEASTONE      reduce using rule 9 (step -> NOT step .)
    ANY             reduce using rule 9 (step -> NOT step .)
    NOT             reduce using rule 9 (step -> NOT step .)
    LBRACKET        reduce using rule 9 (step -> NOT step .)
    NAME            reduce using rule 9 (step -> NOT step .)
    $end            reduce using rule 9 (step -> NOT step .)


state 13

    (6) quantifiedstep -> ATLEASTONE step .

    OPTION          reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    ATLEASTONE      reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    ANY             reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    NOT             reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    LBRACKET        reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    NAME            reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)
    $end            reduce using rule 6 (quantifiedstep -> ATLEASTONE step .)


state 14

    (2) expression -> quantifiedstep expression .

    $end            reduce using rule 2 (expression -> quantifiedstep expression .)


state 15

    (5) quantifiedstep -> OPTION step .

    OPTION          reduce using rule 5 (quantifiedstep -> OPTION step .)
    ATLEASTONE      reduce using rule 5 (quantifiedstep -> OPTION step .)
    ANY             reduce using rule 5 (quantifiedstep -> OPTION step .)
    NOT             reduce using rule 5 (quantifiedstep -> OPTION step .)
    LBRACKET        reduce using rule 5 (quantifiedstep -> OPTION step .)
    NAME            reduce using rule 5 (quantifiedstep -> OPTION step .)
    $end            reduce using rule 5 (quantifiedstep -> OPTION step .)


state 16

    (17) atomicconstraint -> NAME IS . VALUE

    VALUE           shift and go to state 22


state 17

    (10) step -> LBRACKET classconstraint . RBRACKET

    RBRACKET        shift and go to state 23


state 18

    (16) partofclassconstraint -> NOT . classconstraint
    (11) classconstraint -> . partofclassconstraint
    (12) classconstraint -> . partofclassconstraint AND classconstraint
    (13) classconstraint -> . partofclassconstraint OR classconstraint
    (14) partofclassconstraint -> . atomicconstraint
    (15) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (16) partofclassconstraint -> . NOT classconstraint
    (17) atomicconstraint -> . NAME IS VALUE

    LPAREN          shift and go to state 21
    NOT             shift and go to state 18
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 20
    classconstraint                shift and go to state 24
    partofclassconstraint          shift and go to state 19

state 19

    (11) classconstraint -> partofclassconstraint .
    (12) classconstraint -> partofclassconstraint . AND classconstraint
    (13) classconstraint -> partofclassconstraint . OR classconstraint

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RBRACKET        reduce using rule 11 (classconstraint -> partofclassconstraint .)
    RPAREN          reduce using rule 11 (classconstraint -> partofclassconstraint .)
    AND             shift and go to state 26
    OR              shift and go to state 25

  ! AND             [ reduce using rule 11 (classconstraint -> partofclassconstraint .) ]
  ! OR              [ reduce using rule 11 (classconstraint -> partofclassconstraint .) ]


state 20

    (14) partofclassconstraint -> atomicconstraint .

    AND             reduce using rule 14 (partofclassconstraint -> atomicconstraint .)
    OR              reduce using rule 14 (partofclassconstraint -> atomicconstraint .)
    RPAREN          reduce using rule 14 (partofclassconstraint -> atomicconstraint .)
    RBRACKET        reduce using rule 14 (partofclassconstraint -> atomicconstraint .)


state 21

    (15) partofclassconstraint -> LPAREN . classconstraint RPAREN
    (11) classconstraint -> . partofclassconstraint
    (12) classconstraint -> . partofclassconstraint AND classconstraint
    (13) classconstraint -> . partofclassconstraint OR classconstraint
    (14) partofclassconstraint -> . atomicconstraint
    (15) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (16) partofclassconstraint -> . NOT classconstraint
    (17) atomicconstraint -> . NAME IS VALUE

    LPAREN          shift and go to state 21
    NOT             shift and go to state 18
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 20
    classconstraint                shift and go to state 27
    partofclassconstraint          shift and go to state 19

state 22

    (17) atomicconstraint -> NAME IS VALUE .

    OPTION          reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    ATLEASTONE      reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    ANY             reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    NOT             reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    LBRACKET        reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    NAME            reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    $end            reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    AND             reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    OR              reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    RBRACKET        reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)
    RPAREN          reduce using rule 17 (atomicconstraint -> NAME IS VALUE .)


state 23

    (10) step -> LBRACKET classconstraint RBRACKET .

    OPTION          reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    ATLEASTONE      reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    ANY             reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    NOT             reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    LBRACKET        reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    NAME            reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)
    $end            reduce using rule 10 (step -> LBRACKET classconstraint RBRACKET .)


state 24

    (16) partofclassconstraint -> NOT classconstraint .

    AND             reduce using rule 16 (partofclassconstraint -> NOT classconstraint .)
    OR              reduce using rule 16 (partofclassconstraint -> NOT classconstraint .)
    RPAREN          reduce using rule 16 (partofclassconstraint -> NOT classconstraint .)
    RBRACKET        reduce using rule 16 (partofclassconstraint -> NOT classconstraint .)


state 25

    (13) classconstraint -> partofclassconstraint OR . classconstraint
    (11) classconstraint -> . partofclassconstraint
    (12) classconstraint -> . partofclassconstraint AND classconstraint
    (13) classconstraint -> . partofclassconstraint OR classconstraint
    (14) partofclassconstraint -> . atomicconstraint
    (15) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (16) partofclassconstraint -> . NOT classconstraint
    (17) atomicconstraint -> . NAME IS VALUE

    LPAREN          shift and go to state 21
    NOT             shift and go to state 18
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 20
    classconstraint                shift and go to state 28
    partofclassconstraint          shift and go to state 19

state 26

    (12) classconstraint -> partofclassconstraint AND . classconstraint
    (11) classconstraint -> . partofclassconstraint
    (12) classconstraint -> . partofclassconstraint AND classconstraint
    (13) classconstraint -> . partofclassconstraint OR classconstraint
    (14) partofclassconstraint -> . atomicconstraint
    (15) partofclassconstraint -> . LPAREN classconstraint RPAREN
    (16) partofclassconstraint -> . NOT classconstraint
    (17) atomicconstraint -> . NAME IS VALUE

    LPAREN          shift and go to state 21
    NOT             shift and go to state 18
    NAME            shift and go to state 9

    atomicconstraint               shift and go to state 20
    classconstraint                shift and go to state 29
    partofclassconstraint          shift and go to state 19

state 27

    (15) partofclassconstraint -> LPAREN classconstraint . RPAREN

    RPAREN          shift and go to state 30


state 28

    (13) classconstraint -> partofclassconstraint OR classconstraint .

    RBRACKET        reduce using rule 13 (classconstraint -> partofclassconstraint OR classconstraint .)
    AND             reduce using rule 13 (classconstraint -> partofclassconstraint OR classconstraint .)
    OR              reduce using rule 13 (classconstraint -> partofclassconstraint OR classconstraint .)
    RPAREN          reduce using rule 13 (classconstraint -> partofclassconstraint OR classconstraint .)


state 29

    (12) classconstraint -> partofclassconstraint AND classconstraint .

    RBRACKET        reduce using rule 12 (classconstraint -> partofclassconstraint AND classconstraint .)
    AND             reduce using rule 12 (classconstraint -> partofclassconstraint AND classconstraint .)
    OR              reduce using rule 12 (classconstraint -> partofclassconstraint AND classconstraint .)
    RPAREN          reduce using rule 12 (classconstraint -> partofclassconstraint AND classconstraint .)


state 30

    (15) partofclassconstraint -> LPAREN classconstraint RPAREN .

    AND             reduce using rule 15 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    OR              reduce using rule 15 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    RPAREN          reduce using rule 15 (partofclassconstraint -> LPAREN classconstraint RPAREN .)
    RBRACKET        reduce using rule 15 (partofclassconstraint -> LPAREN classconstraint RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 19 resolved as shift
WARNING: shift/reduce conflict for OR in state 19 resolved as shift
